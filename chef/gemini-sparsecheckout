# 1. Choose a name for your local project directory and create it
#    Replace 'my-sparse-project' with your desired directory name
mkdir my-sparse-project
cd my-sparse-project

# 2. Initialize a new, empty Git repository in this directory
git init

# 3. Add the remote repository URL
#    IMPORTANT: Replace 'https://github.com/your-username/your-repo.git' with the actual URL of the repository you want to clone
git remote add origin https://github.com/your-username/your-repo.git

# 4. Enable Git's sparse-checkout feature
git config core.sparseCheckout true

# 5. Define the specific directories or files you want to include in your sparse checkout.
#    Each 'echo' command adds one pattern to the .git/info/sparse-checkout file.
#    Replace 'path/to/your/first/directory/' and 'another/file.txt' with the actual paths you need.
#    Add more 'echo' lines if you have more patterns.
echo "path/to/your/first/directory/" > .git/info/sparse-checkout
echo "another/file.txt" >> .git/info/sparse-checkout
echo "src/my-specific-module/" >> .git/info/sparse-checkout # Example: another directory
echo "docs/README.md" >> .git/info/sparse-checkout         # Example: another file

# 6. Fetch the branch you want and check it out sparsely.
#    IMPORTANT: Replace 'main' with the actual name of the branch you want to checkout (e.g., 'master', 'develop', etc.)
git fetch origin main
git checkout main

# Optional: Verify your working directory
echo "Sparse checkout complete! Your project directory should now contain only the specified files/directories."
ls -F # List contents of the current directory to verify
